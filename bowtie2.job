#!/bin/bash

#PBS -N id
#PBS -q darwin
#PBS -l nodes=1:ppn=2,naccesspolicy=singleuser
#PBS -l walltime=336:00:00
#PBS -m abe
#PBS -M jwillou@purdue.edu

cd $PBS_O_WORKDIR

module load bioinfo
module load java
module load samtools/1.3
module load picard-tools/1.109
module load bowtie2/2.2.1
module load bamtools/2.3.0
module load BEDTools/2.20.1

###following https://bitbucket.org/HeidiLischer/refguideddenovoassembly_pipelines####
  
#remove scaffolds shorter than 10 kb
#java -jar ./refguided/RemoveShortSeq.jar -i ../c_variegatus/GCF_000732505.1_C_variegatus-1.0_genomic.fna -o ref/Cvariegatus_cleaned.fa -length 10000 
  
#create index files
#samtools faidx ref/Cvariegatus_cleaned.fa
#java -jar $PICARD/CreateSequenceDictionary.jar R=ref/Cvariegatus_cleaned.fa O=ref/Cvariegatus_cleaned.dict
  
#merge unpaired files - note: original pipeline merged unpaired reads but I have none
  
#index reference file  
#bowtie2-build ref/Cvariegatus_cleaned.fa ref/Cvariegatus_cleaned
  
#combine two libraries to make easier to run bowtie (my addition, works because cleaned!)
#cat 040524_WP4-UM_S173_R1_filteredT.fastq 040525_WP2-LM_S174_R1_filteredT.fastq > R1.fastq
#cat 040524_WP4-UM_S173_R2_filteredT.fastq 040525_WP2-LM_S174_R2_filteredT.fastq > R2.fastq

#map reads to reference
#bowtie2 --fast-local -p 20 -q --phred33 -I 50 -X 200 -x ref/Cvariegatus_cleaned -1 R1.fastq -2 R2.fastq | samtools view -@ 10 -bS - | samtools sort -@ 10 - -T pup_WP4_WP2 -o pup_42_all.sorted.bam
#samtools index pup_42_all.sorted.bam
     
#filter unmapped reads    
#samtools view -b -F 4 pup_42_all.sorted.bam > pup_42_sorted.bam 
#samtools index pup_42_sorted.bam
     
#get unmapped reads
#samtools view -b -f 4 pup_42_all.sorted.bam > pup_42_unmapped.bam
#samtools view -b -f 9 pup_42_unmapped.bam > pup_42_unmapped.sorted.bam
#java -jar $PICARD/SamToFastq.jar INPUT=pup_42_unmapped.sorted.bam FASTQ=pup_42.1.failPair.fastq SECOND_END_FASTQ=pup_42.2.failPair.fastq
#rm pup_42_unmapped.sorted.bam
#samtools view -b -F 8 -f 64  pup_42_unmapped.bam | bamtools convert -format fastq -out pup_42.1.failUnPair.fastq 
#samtools view -b -F 8 -f 128  pup_42_unmapped.bam | bamtools convert -format fastq -out pup_42.2.failUnPair.fastq

#filter for mapping quality >=10    
#samtools view -b -q 10 pup_42_sorted.bam > pup_42_sorted_filtered.bam
    
#get summary stats
#echo "summary"
#bamtools stats -in pup_42_all.sorted.bam 
#echo "bamtools stats --> pup_42_all.sorted.bam"
#bamtools stats -in pup_42_sorted.bam 
#echo "bamtools stats --> pup_42_sorted.bam"
#bamtools stats -in pup_42_sorted_filtered.bam 
#echo "bamtools stats --> pup_42_sorted_filtered.bam"
    
#get blocks and superblocks
#echo "get blocks and superblocks..."

#get coverage along genome covFile=WP42_mate_coverage.txt
#bedtools genomecov -ibam pup_42_sorted_filtered.bam -bga > WP42_mate_coverage.txt

#only proparly paired reads
samtools view -bf 0x2 pup_42_sorted_filtered.bam | samtools sort - -n | bedtools bamtobed -i - -bedpe | awk '$1 == $4' | cut -f 1,2,6 | sort -k 1,1 | bedtools genomecov -i - -bga -g ref/Cvariegatus_cleaned.fa.fai > WP42_mate_coveragePaired.txt
  
#get blocks with a minimal coverage of 10 (paired-end) reads and create superblocks of at least 12000bp length and a minimal overlap of 300bp (max. overlap = 3*300bp)
java -jar refguided/GetBlocks.jar -i WP42_mate_coverage.txt -paired WP42_mate_coveragePaired.txt -o blocks.txt -oSuper superblocks.txt -mCov 10 -sLength 12000 -sOverlap 300 -maxLength 100000
